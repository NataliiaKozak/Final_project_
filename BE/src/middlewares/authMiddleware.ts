import { Request, Response, NextFunction } from 'express';
import jwt from 'jsonwebtoken';
import dotenv from 'dotenv';
import { JwtPayload } from '../config/jwt.js'; // üëà –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–∏–ø –∏–∑ jwt.ts

dotenv.config();

const JWT_SECRET = process.env.JWT_SECRET || 'default_secret';

// üîπ –†–∞—Å—à–∏—Ä—è–µ–º Request (–¥–æ–±–∞–≤–ª—è–µ–º user –ø–æ—Å–ª–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)
export interface RequestWithUser extends Request {
  user?: { id: string };
}

// üîπ Middleware –¥–ª—è –∑–∞—â–∏—Ç—ã —Ä–æ—É—Ç–æ–≤.  API —Ä–æ—É—Ç–æ–≤
export const protect = (
  req: RequestWithUser,
  res: Response,
  next: NextFunction
): void => {
  const header = req.header('Authorization');

  if (!header || !header.startsWith('Bearer ')) {
    res.status(401).json({ message: '–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞' });
    return;
  }

  try {
    const token = header.split(' ')[1];
    const decoded = jwt.verify(token, JWT_SECRET) as JwtPayload;
    req.user = { id: decoded.user_id };
    next();
  } catch {
    res.status(401).json({ message: '–ù–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –∏—Å—Ç–µ–∫—à–∏–π —Ç–æ–∫–µ–Ω' });
  }
};

// –ø—Ä–æ—â–µ, –º–µ–Ω–µ–µ —Å—Ç—Ä–æ–≥–∏–π: –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Å—ë, —á—Ç–æ –∏–¥—ë—Ç –ø–æ—Å–ª–µ –ø—Ä–æ–±–µ–ª–∞. –ú–æ–∂–µ—Ç ¬´–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –º—É—Å–æ—Ä¬ª.
// export const protect = (req: RequestWithUser, res: Response, next: NextFunction): void => {
//   const token = req.header("Authorization")?.split(" ")[1];

//   if (!token) {
//      res.status(401).json({ message: "–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞" });
//      return;
//   }

//   try {
//     const decoded = jwt.verify(token, JWT_SECRET) as { id: string };
//     req.user = { id: decoded.id };
//     next();
//   } catch (error) {
//     res.status(401).json({ message: "–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω" });
//   }
// };

//–≠—Ç–æ ¬´—Å—Ç–æ—Ä–æ–∂¬ª –¥–ª—è —Ä–æ—É—Ç–æ–≤.–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞–ª–∏—á–∏–µ JWT-—Ç–æ–∫–µ–Ω–∞ –≤ Authorization (–µ—Å—Ç—å –ª–∏ —É –∑–∞–ø—Ä–æ—Å–∞ –≤–∞–ª–∏–¥–Ω—ã–π Authorization): Bearer <token>.
//–ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω ‚Üí –≤ req.user –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.{ id: string }
//–ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Üí –∑–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–∞–µ—Ç 401 Unauthorized
//–î–∞–ª—å—à–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –∑–Ω–∞—é—Ç, –∫–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å.
