{"version":3,"file":"uploadImage.js","sourceRoot":"","sources":["../../../src/middlewares/uploadImage.ts"],"names":[],"mappings":"AAAA,qBAAqB;AACrB,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,KAAK,MAAM,OAAO,CAAC;AAG1B,MAAM,OAAO,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;AACvC,MAAM,MAAM,GAAG,MAAM,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE,QAAQ,EAAE,EAAE,GAAG,IAAI,GAAG,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO;AAEnF,2CAA2C;AAC3C,MAAM,YAAY,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC7E,IAAI,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,IAAI;YAAE,OAAO,IAAI,EAAE,CAAC;QAE7B,MAAM,eAAe,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;aACjD,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,CAAC,sBAAsB;aAC5D,IAAI,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;aACrB,QAAQ,EAAE,CAAC;QAEd,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC,CAAC,qCAAqC;QACxE,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,CAAC,qEAAqE;QACvG,IAAI,EAAE,CAAC;IACT,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;QAC1D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,8BAA8B,EAAE,CAAC,CAAC;IACpE,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC","sourcesContent":["//для картинок постов\r\nimport multer from \"multer\";\r\nimport sharp from \"sharp\";\r\nimport { Request, Response, NextFunction } from \"express\";\r\n\r\nconst storage = multer.memoryStorage();\r\nconst upload = multer({ storage, limits: { fileSize: 10 * 1024 * 1024 } }); // 10MB\r\n\r\n// Сжимаем и уменьшаем перед загрузкой в S3\r\nconst processImage = async (req: Request, res: Response, next: NextFunction) => {\r\n  try {\r\n    if (!req.file) return next();\r\n\r\n    const optimizedBuffer = await sharp(req.file.buffer)\r\n      .resize(1000, 1000, { fit: \"inside\" }) // уменьшаем до 1000px\r\n      .jpeg({ quality: 80 })\r\n      .toBuffer();\r\n\r\n    req.file.buffer = optimizedBuffer; // заменяем на оптимизированный буфер\r\n    req.file.mimetype = \"image/jpeg\"; // указываем новый формат // добавлено после проверки требований 2.10\r\n    next();\r\n  } catch (error) {\r\n    console.error(\"Ошибка при обработке изображения:\", error);\r\n    res.status(500).json({ message: \"Ошибка обработки изображения\" });\r\n  }\r\n};\r\n\r\nexport { upload, processImage };\r\n\r\n\r\n"]}