{"version":3,"file":"authMiddleware.js","sourceRoot":"","sources":["../../../src/middlewares/authMiddleware.ts"],"names":[],"mappings":"AACA,OAAO,GAAG,MAAM,cAAc,CAAC;AAC/B,OAAO,MAAM,MAAM,QAAQ,CAAC;AAG5B,MAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,gBAAgB,CAAC;AAO9D,+CAA+C;AAC/C,MAAM,CAAC,MAAM,OAAO,GAAG,CACrB,GAAoB,EACpB,GAAa,EACb,IAAkB,EACZ,EAAE;IACR,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;IAE3C,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;QAC7C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,mCAAmC,EAAE,CAAC,CAAC;QACvE,OAAO;IACT,CAAC;IAED,IAAI,CAAC;QACH,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,CAAe,CAAC;QAC5D,GAAG,CAAC,IAAI,GAAG,EAAE,EAAE,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC;QACnC,IAAI,EAAE,CAAC;IACT,CAAC;IAAC,MAAM,CAAC;QACP,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC,CAAC;IACnE,CAAC;AACH,CAAC,CAAC;AAEF,yFAAyF;AACzF,8FAA8F;AAC9F,8DAA8D;AAE9D,kBAAkB;AAClB,+EAA+E;AAC/E,eAAe;AACf,MAAM;AAEN,UAAU;AACV,uEAAuE;AACvE,qCAAqC;AACrC,cAAc;AACd,sBAAsB;AACtB,2DAA2D;AAC3D,MAAM;AACN,KAAK;AAEL,mIAAmI;AACnI,4EAA4E;AAC5E,0EAA0E;AAC1E,6DAA6D","sourcesContent":["import { Request, Response, NextFunction } from 'express';\r\nimport jwt from 'jsonwebtoken';\r\nimport dotenv from 'dotenv';\r\nimport { JwtPayload } from '../config/jwt.js'; // üëà –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–∏–ø –∏–∑ jwt.ts\r\n\r\ndotenv.config();\r\n\r\nconst JWT_SECRET = process.env.JWT_SECRET || 'default_secret';\r\n\r\n// üîπ –†–∞—Å—à–∏—Ä—è–µ–º Request (–¥–æ–±–∞–≤–ª—è–µ–º user –ø–æ—Å–ª–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)\r\nexport interface RequestWithUser extends Request {\r\n  user?: { id: string };\r\n}\r\n\r\n// üîπ Middleware –¥–ª—è –∑–∞—â–∏—Ç—ã —Ä–æ—É—Ç–æ–≤.  API —Ä–æ—É—Ç–æ–≤\r\nexport const protect = (\r\n  req: RequestWithUser,\r\n  res: Response,\r\n  next: NextFunction\r\n): void => {\r\n  const header = req.header('Authorization');\r\n\r\n  if (!header || !header.startsWith('Bearer ')) {\r\n    res.status(401).json({ message: '–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞' });\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const token = header.split(' ')[1];\r\n    const decoded = jwt.verify(token, JWT_SECRET) as JwtPayload;\r\n    req.user = { id: decoded.user_id };\r\n    next();\r\n  } catch {\r\n    res.status(401).json({ message: '–ù–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –∏—Å—Ç–µ–∫—à–∏–π —Ç–æ–∫–µ–Ω' });\r\n  }\r\n};\r\n\r\n// –ø—Ä–æ—â–µ, –º–µ–Ω–µ–µ —Å—Ç—Ä–æ–≥–∏–π: –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Å—ë, —á—Ç–æ –∏–¥—ë—Ç –ø–æ—Å–ª–µ –ø—Ä–æ–±–µ–ª–∞. –ú–æ–∂–µ—Ç ¬´–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –º—É—Å–æ—Ä¬ª.\r\n// export const protect = (req: RequestWithUser, res: Response, next: NextFunction): void => {\r\n//   const token = req.header(\"Authorization\")?.split(\" \")[1];\r\n\r\n//   if (!token) {\r\n//      res.status(401).json({ message: \"–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞\" });\r\n//      return;\r\n//   }\r\n\r\n//   try {\r\n//     const decoded = jwt.verify(token, JWT_SECRET) as { id: string };\r\n//     req.user = { id: decoded.id };\r\n//     next();\r\n//   } catch (error) {\r\n//     res.status(401).json({ message: \"–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω\" });\r\n//   }\r\n// };\r\n\r\n//–≠—Ç–æ ¬´—Å—Ç–æ—Ä–æ–∂¬ª –¥–ª—è —Ä–æ—É—Ç–æ–≤.–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞–ª–∏—á–∏–µ JWT-—Ç–æ–∫–µ–Ω–∞ –≤ Authorization (–µ—Å—Ç—å –ª–∏ —É –∑–∞–ø—Ä–æ—Å–∞ –≤–∞–ª–∏–¥–Ω—ã–π Authorization): Bearer <token>.\r\n//–ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω ‚Üí –≤ req.user –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.{ id: string }\r\n//–ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Üí –∑–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–∞–µ—Ç 401 Unauthorized\r\n//–î–∞–ª—å—à–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –∑–Ω–∞—é—Ç, –∫–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å.\r\n"]}