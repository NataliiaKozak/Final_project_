{"version":3,"file":"notificationController.js","sourceRoot":"","sources":["../../../src/controllers/notificationController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Response } from \"express\";\r\nimport { Types } from \"mongoose\";\r\nimport Notification from \"../models/NotificationModel.js\";\r\nimport { RequestWithUser } from \"../middlewares/authMiddleware.js\";\r\n\r\n// Создать уведомление\r\nexport const createNotification = async (\r\n  userId: string | Types.ObjectId,\r\n  senderId: string | Types.ObjectId,\r\n  type: \"liked_post\" | \"liked_comment\" | \"commented_post\" | \"followed_user\",\r\n  postId?: string | Types.ObjectId,\r\n  commentId?: string | Types.ObjectId\r\n) => {\r\n  try {\r\n    if (!Types.ObjectId.isValid(String(userId)) || !Types.ObjectId.isValid(String(senderId))) {\r\n      console.error(\"createNotification: invalid userId or senderId\");\r\n      return;\r\n    }\r\n\r\n    const notificationDoc = new Notification({\r\n      user: new Types.ObjectId(String(userId)),\r\n      sender: new Types.ObjectId(String(senderId)),\r\n      type,\r\n      post: postId ? new Types.ObjectId(String(postId)) : undefined,\r\n      comment: commentId ? new Types.ObjectId(String(commentId)) : undefined,\r\n      isRead: false,\r\n    });\r\n\r\n    await notificationDoc.save();\r\n    return notificationDoc;\r\n  } catch (error) { //добавить unknown?\r\n    // const error = err as Error; //добавить?\r\n    console.error(\"Ошибка при создании уведомления:\", error);\r\n    return;\r\n  }\r\n};\r\n\r\n// Получить уведомления пользователя\r\nexport const getNotifications = async (req: RequestWithUser, res: Response) => {\r\n  try {\r\n    const userId = req.user?.id;\r\n    if (!userId) return res.status(401).json({ message: \"Неавторизовано\" });\r\n\r\n    const notifications = await Notification.find({ user: userId })\r\n      .populate(\"sender\", \"username profileImage\")\r\n      .populate(\"post\", \"image description\")\r\n      .populate(\"comment\", \"text\")\r\n      .sort({ createdAt: -1 });\r\n\r\n    res.json(notifications);\r\n  } catch (err: unknown) { \r\n    const error = err as Error;\r\n    res.status(500).json({ message: \"Ошибка\", error: error.message });\r\n}\r\n};\r\n\r\n// Отметить все как прочитанные\r\nexport const markAsRead = async (req: RequestWithUser, res: Response): Promise<void> => {\r\n  try {\r\n    if (!req.user) {\r\n      res.status(401).json({ message: \"Неавторизованный доступ\" });\r\n      return;\r\n    }\r\n\r\n    const unread = await Notification.countDocuments({ user: req.user.id, isRead: false });\r\n    if (unread === 0) {\r\n      res.status(200).json({ message: \"У вас нет непрочитанных уведомлений\" });\r\n      return;\r\n    }\r\n\r\n    await Notification.updateMany({ user: req.user.id, isRead: false }, { $set: { isRead: true } });\r\n    res.json({ message: \"Все уведомления отмечены как прочитанные\" });\r\n  } catch (err: unknown) {//нужно было добавить unknown?\r\n    const error = err as Error;//нужно было добавить?\r\n    console.error(\"Ошибка при обновлении уведомлений:\", error);\r\n    res.status(500).json({ message: \"Ошибка при обновлении уведомлений\", error });\r\n  }\r\n};"]}