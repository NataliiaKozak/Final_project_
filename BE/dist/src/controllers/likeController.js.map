{"version":3,"file":"likeController.js","sourceRoot":"","sources":["../../../src/controllers/likeController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from 'express';\r\nimport Like from '../models/LikeModel.js';\r\nimport Post from '../models/PostModel.js';\r\nimport Comment from '../models/CommentModel.js';\r\nimport { RequestWithUser } from '../middlewares/authMiddleware.js';\r\nimport { createNotification } from './notificationController.js';\r\n\r\n//===================== Лайк поста=================================\r\nexport const toggleLike = async (\r\n  req: RequestWithUser,\r\n  res: Response\r\n): Promise<void> => {\r\n  try {\r\n    const { postId } = req.params;\r\n    const userId = req.user?.id;\r\n\r\n    if (!userId) {\r\n      res.status(401).json({ message: 'Пользователь не авторизован' });\r\n      return;\r\n    }\r\n\r\n    const post = await Post.findById(postId).populate('author');\r\n    if (!post) {\r\n      res.status(404).json({ message: 'Пост не найден' });\r\n      return;\r\n    }\r\n\r\n    const existingLike = await Like.findOne({ user: userId, post: postId });\r\n\r\n    if (existingLike) {\r\n      await existingLike.deleteOne();\r\n      res.json({ message: 'Лайк удалён' });\r\n      return;\r\n    }\r\n\r\n    const like = new Like({ user: userId, post: postId });\r\n    await like.save();\r\n\r\n    //Уведомление автору поста\r\n    if (post.author && post.author._id.toString() !== userId) {\r\n      await createNotification(post.author._id, userId, 'liked_post', post._id);\r\n    }\r\n\r\n    res.json({ message: 'Лайк добавлен', like });\r\n  } catch (error) {\r\n    console.error('Ошибка при изменении лайка:', error);\r\n    res.status(500).json({ message: 'Ошибка при изменении лайка' });\r\n  }\r\n};\r\n\r\n//Дополнительная функциональность. По макету не требуется\r\n// ====================Получить лайки поста=========================?????\r\n// export const getPostLikes = async (\r\n//   req: Request,\r\n//   res: Response\r\n// ): Promise<void> => {\r\n//   try {\r\n//     const { postId } = req.params;\r\n//     const likes = await Like.find({ post: postId }).populate(\r\n//       'user',\r\n//       'username profileImage'\r\n//     );\r\n//     res.json(likes);\r\n//   } catch (error) {\r\n//     console.error('Ошибка при получении лайков:', error);\r\n//     res.status(500).json({ message: 'Ошибка при получении лайков' });\r\n//   }\r\n// };\r\n\r\n// ===================Лайк комментария===============================\r\nexport const toggleLikeComment = async (\r\n  req: RequestWithUser,\r\n  res: Response\r\n): Promise<void> => {\r\n  try {\r\n    const { commentId } = req.params;\r\n    const userId = req.user?.id;\r\n\r\n    if (!userId) {\r\n      res.status(401).json({ message: 'Пользователь не авторизован' });\r\n      return;\r\n    }\r\n\r\n    //в связи с удалением автора\r\n    // const comment = await Comment.findById(commentId).populate(\"author\");\r\n    // const comment = await Comment.findById(commentId).populate(\r\n    //   'author',\r\n    //   '_id username profileImage'\r\n    // );\r\n    // if (!comment) {\r\n    //   res.status(404).json({ message: 'Комментарий не найден' });\r\n    //   return;\r\n    // }\r\n    const comment = await Comment.findById(commentId).populate(\"user\", \"_id username profileImage\");\r\n    if (!comment) {\r\n      res.status(404).json({ message: \"Комментарий не найден\" });\r\n      return;\r\n    }\r\n\r\n    const existingLike = await Like.findOne({\r\n      user: userId,\r\n      comment: commentId,\r\n    });\r\n\r\n    if (existingLike) {\r\n      await existingLike.deleteOne();\r\n      res.json({ message: 'Лайк комментария удалён' });\r\n      return;\r\n    }\r\n\r\n    const like = new Like({ user: userId, comment: commentId });\r\n    await like.save();\r\n\r\n    // Уведомление теперь автору комментария (comment.user), а не \"author\"\r\n    // if (comment.author && comment.author.toString() !== userId) {\r\n    //   await createNotification(\r\n    //     comment.author,\r\n    //     userId,\r\n    //     'liked_comment',\r\n    //     undefined,\r\n    //     comment._id\r\n    //   );\r\n    // }\r\n    if (comment.user && comment.user.toString() !== userId) {\r\n      await createNotification(comment.user, userId, \"liked_comment\", undefined, comment._id);\r\n    }\r\n\r\n\r\n    res.json({ message: 'Лайк комментария добавлен', like });\r\n  } catch (error) {\r\n    console.error('Ошибка при изменении лайка комментария:', error);\r\n    res.status(500).json({ message: 'Ошибка при изменении лайка комментария' });\r\n  }\r\n};\r\n\r\n//по макету не требуется\r\n// ================Получить лайки комментария=======================\r\n// export const getCommentLikes = async (\r\n//   req: Request,\r\n//   res: Response\r\n// ): Promise<void> => {\r\n//   try {\r\n//     const { commentId } = req.params;\r\n//     const likes = await Like.find({ comment: commentId }).populate(\r\n//       'user',\r\n//       'username profileImage'\r\n//     );\r\n//     res.json(likes);\r\n//   } catch (error) {\r\n//     console.error('Ошибка при получении лайков комментария:', error);\r\n//     res\r\n//       .status(500)\r\n//       .json({ message: 'Ошибка при получении лайков комментария' });\r\n//   }\r\n// };\r\n"]}