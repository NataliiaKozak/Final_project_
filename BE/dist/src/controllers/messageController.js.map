{"version":3,"file":"messageController.js","sourceRoot":"","sources":["../../../src/controllers/messageController.ts"],"names":[],"mappings":"AAAA,+CAA+C;AAC/C,gDAAgD;AAChD,mEAAmE;AA8BnE,OAAO,OAAO,MAAM,2BAA2B,CAAC;AAGhD,2DAA2D;AAC3D,MAAM,CAAC,MAAM,WAAW,GAAG,KAAK,EAAE,GAAoB,EAAE,GAAa,EAAiB,EAAE;IACtF,IAAI,CAAC;QACH,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAM,kBAAkB;QACtD,MAAM,aAAa,GAAG,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,sBAAsB;QAE1D,IAAI,CAAC,aAAa,EAAE,CAAC;YACnB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,+BAA+B,EAAE,CAAC,CAAC;YACnE,OAAO;QACT,CAAC;QAED,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC;YAClC,GAAG,EAAE;gBACH,EAAE,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,EAAE;gBAC5C,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE;aAC7C;SACF,CAAC;aACC,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC;aACtB,QAAQ,CAAC,QAAQ,EAAE,uBAAuB,CAAC;aAC3C,QAAQ,CAAC,WAAW,EAAE,uBAAuB,CAAC,CAAC;QAElD,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrB,CAAC;IAAC,OAAO,GAAY,EAAE,CAAC;QACtB,MAAM,KAAK,GAAG,GAAY,CAAC;QAC3B,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACvD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,+BAA+B,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;IAC3F,CAAC;AACH,CAAC,CAAC","sourcesContent":["// import { Request, Response } from \"express\";\r\n// import Message from \"../models/MessageModel\";\r\n// import { RequestWithUser } from \"../middlewares/authMiddleware\";\r\n\r\n// // –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –º–µ–∂–¥—É –¥–≤—É–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\r\n// export const getMessages = async (req: RequestWithUser, res: Response) => {\r\n//   try {\r\n//     const userId = req.user?.id;\r\n//     const { targetUserId } = req.params;\r\n\r\n//     if (!userId) {\r\n//       res.status(401).json({ message: \"–ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\" });\r\n//       return;\r\n//     }\r\n\r\n//     const messages = await Message.find({\r\n//       $or: [\r\n//         { sender: userId, receiver: targetUserId },\r\n//         { sender: targetUserId, receiver: userId },\r\n//       ],\r\n//     }).sort({ createdAt: 1 });\r\n\r\n//     res.json(messages);\r\n//   } catch (err) {\r\n//     res.status(500).json({ message: \"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π\" });\r\n//   }\r\n// };\r\n\r\n\r\n//OR:\r\n\r\nimport { Request, Response } from \"express\";\r\nimport Message from \"../models/MessageModel.js\";\r\nimport { RequestWithUser } from \"../middlewares/authMiddleware.js\";\r\n\r\n// üîπ –ü–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –º–µ–∂–¥—É –¥–≤—É–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\r\nexport const getMessages = async (req: RequestWithUser, res: Response): Promise<void> => {\r\n  try {\r\n    const { userId } = req.params;      // –≤—Ç–æ—Ä–æ–π —É—á–∞—Å—Ç–Ω–∏–∫\r\n    const currentUserId = req.user?.id; // —Ç–µ–∫—É—â–∏–π (–∏–∑ —Ç–æ–∫–µ–Ω–∞)\r\n\r\n    if (!currentUserId) {\r\n      res.status(401).json({ message: \"–ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\" });\r\n      return;\r\n    }\r\n\r\n    const messages = await Message.find({\r\n      $or: [\r\n        { sender: currentUserId, recipient: userId },\r\n        { sender: userId, recipient: currentUserId },\r\n      ],\r\n    })\r\n      .sort({ createdAt: 1 })\r\n      .populate(\"sender\", \"username profileImage\")\r\n      .populate(\"recipient\", \"username profileImage\");\r\n\r\n    res.json(messages);\r\n  } catch (err: unknown) {\r\n    const error = err as Error;\r\n    console.error(\"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π:\", error);\r\n    res.status(500).json({ message: \"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π\", error: error.message });\r\n  }\r\n};\r\n"]}