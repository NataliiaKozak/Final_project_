{"version":3,"file":"followController.js","sourceRoot":"","sources":["../../../src/controllers/followController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport Follow from \"../models/FollowModel.js\";\r\nimport { RequestWithUser } from \"../middlewares/authMiddleware.js\";\r\nimport { createNotification } from \"./notificationController.js\";\r\nimport { Types } from \"mongoose\";\r\n\r\n/* GET followers of userId */\r\nexport const getFollowers = async (req: Request, res: Response) => {\r\n  try {\r\n    const { userId } = req.params;\r\n    if (!Types.ObjectId.isValid(userId)) {\r\n      return res.status(400).json({ message: \"Некорректный userId\" });\r\n    }\r\n\r\n    const followers = await Follow.find({ following: userId }).populate(\r\n      \"follower\",\r\n      \"username profileImage\"\r\n    );\r\n\r\n    // followers: Follow[]; each .follower is populated (document) or ObjectId\r\n    const result = followers.map((s) =>\r\n      (s.follower as unknown) // приведение безопаснее чем any\r\n    );\r\n\r\n    res.json(result);\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).json({ message: \"Ошибка при получении подписчиков\" });\r\n  }\r\n};\r\n\r\n/* GET following of userId */\r\nexport const getFollowing = async (req: Request, res: Response) => {\r\n  try {\r\n    const { userId } = req.params;\r\n    if (!Types.ObjectId.isValid(userId)) {\r\n      return res.status(400).json({ message: \"Некорректный userId\" });\r\n    }\r\n\r\n    const following = await Follow.find({ follower: userId }).populate(\r\n      \"following\",\r\n      \"username profileImage\"\r\n    );\r\n\r\n    const result = following.map((s) => (s.following as unknown));\r\n    res.json(result);\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).json({ message: \"Ошибка при получении подписок\" });\r\n  }\r\n};\r\n\r\n/* followUser: follower (from token) -> follow userId (from params) */\r\nexport const followUser = async (\r\n  req: RequestWithUser,\r\n  res: Response\r\n): Promise<void> => {\r\n  try {\r\n    const { userId } = req.params; // target to follow\r\n    const followerId = req.user?.id;\r\n\r\n    if (!followerId) {\r\n      res.status(401).json({ message: \"Требуется авторизация\" });\r\n      return;\r\n    }\r\n\r\n    if (!Types.ObjectId.isValid(userId)) {\r\n      res.status(400).json({ message: \"Некорректный userId\" });\r\n      return;\r\n    }\r\n\r\n    if (followerId === userId) {\r\n      res.status(400).json({ message: \"Нельзя подписаться на самого себя\" });\r\n      return;\r\n    }\r\n\r\n    const existing = await Follow.findOne({\r\n      follower: followerId,\r\n      following: userId,\r\n    });\r\n    if (existing) {\r\n      res.status(400).json({ message: \"Вы уже подписаны\" });\r\n      return;\r\n    }\r\n\r\n    const follow = new Follow({ follower: followerId, following: userId });\r\n    await follow.save();\r\n\r\n    // уведомление — теперь просто передаём строки, внутри оно корректно создаст ObjectId\r\n    await createNotification(String(userId), String(followerId), \"followed_user\");\r\n\r\n    res.json({ message: \"Подписка успешна\", follow });\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).json({ message: \"Ошибка при подписке\" });\r\n  }\r\n};\r\n\r\n/* unfollowUser */\r\nexport const unfollowUser = async (\r\n  req: RequestWithUser,\r\n  res: Response\r\n): Promise<void> => {\r\n  try {\r\n    const { userId } = req.params;\r\n    const followerId = req.user?.id;\r\n\r\n    if (!followerId) {\r\n      res.status(401).json({ message: \"Требуется авторизация\" });\r\n      return;\r\n    }\r\n\r\n    const follow = await Follow.findOneAndDelete({\r\n      follower: followerId,\r\n      following: userId,\r\n    });\r\n\r\n    if (!follow) {\r\n      res.status(400).json({ message: \"Вы не подписаны на этого пользователя\" });\r\n      return;\r\n    }\r\n\r\n    res.json({ message: \"Вы успешно отписались\" });\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).json({ message: \"Ошибка при отписке\" });\r\n  }\r\n};\r\n// Если у тебя есть Follow коллекция — используй её (она уже есть у тебя).\r\n// После добавления/удаления записи в Follow:\r\n// Инкремент / декремент числовых полей followers_count / following_count пользователя через $inc, либо обновляй массивы followers/following через $addToSet / $pull (если ты их хранишь).\r\n// Пример:\r\n// await User.findByIdAndUpdate(targetUserId, { $inc: { followers_count: 1 }, $addToSet: { followers: followerId } });\r\n// await User.findByIdAndUpdate(followerId, { $inc: { following_count: 1 }, $addToSet: { following: targetUserId } });\r\n"]}