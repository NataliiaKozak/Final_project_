{"version":3,"file":"userController.js","sourceRoot":"","sources":["../../../src/controllers/userController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from 'express';\r\nimport User from '../models/UserModel.js';\r\nimport Post from '../models/PostModel.js';\r\nimport Comment from '../models/CommentModel.js';\r\nimport Like from '../models/LikeModel.js';\r\nimport Notification from '../models/NotificationModel.js';\r\nimport Follow from '../models/FollowModel.js';\r\nimport { RequestWithUser } from '../middlewares/authMiddleware.js';\r\nimport multer from 'multer';\r\nimport { uploadToS3 } from '../config/s3.js';\r\n\r\nconst storage = multer.memoryStorage();\r\nexport const upload = multer({\r\n  storage,\r\n  limits: { fileSize: 5 * 1024 * 1024 },\r\n});\r\n\r\n// üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\r\nexport const getProfile = async (\r\n  req: RequestWithUser,//–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ç–∏–ø\r\n  res: Response\r\n): Promise<void> => {\r\n  try {\r\n    // const { id } = req.params;//–±–µ—Ä—ë—Ç :id –∏–∑ URL (–Ω–∞–ø—Ä–∏–º–µ—Ä, /users/123)\r\n    // // const user = await User.findById(id).select('-password');\r\n    // const user = await User.findById(req.params.id)\r\n    //   .select(\"-password\") // —Å–∫—Ä—ã–≤–∞–µ–º  —Ö—ç—à –ø–∞—Ä–æ–ª—è –ø—Ä–∏ –≤—ã–¥–∞—á–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.\r\n    //   .populate(\"followers\", \"username profileImage\")\r\n    //   .populate(\"following\", \"username profileImage\");//–≤–º–µ—Å—Ç–æ —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ç–æ–ª—å–∫–æ –º–∞—Å—Å–∏–≤ ObjectId,\r\n    //   // —Ç—ã —Å—Ä–∞–∑—É –ø–æ–ª—É—á–∞–µ—à—å –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤/–ø–æ–¥–ø–∏—Å–æ–∫\r\n\r\n    const id = req.params.id;\r\n\r\n    const user = await User.findById(id)\r\n      .select('-password') // —Å–∫—Ä—ã–≤–∞–µ–º —Ö—ç—à –ø–∞—Ä–æ–ª—è\r\n      .populate('followers', 'username profileImage')\r\n      .populate('following', 'username profileImage');\r\n\r\n    if (!user) {\r\n      res.status(404).json({ message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω' });\r\n      return;\r\n    }\r\n    // const { id } = req.params;\r\n    // –°—á–∏—Ç–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\r\n    const postsCount = await Post.countDocuments({ author: id });\r\n    const commentsCount = await Comment.countDocuments({ user: id });\r\n    const likesCount = await Like.countDocuments({ user: id });\r\n    const notificationsCount = await Notification.countDocuments({ user: id });\r\n\r\n    // –ø—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–¥–ª—è —á—É–∂–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è)\r\n    let isFollowing = false;\r\n    if (req.user?.id && req.user.id !== id) {\r\n      const existing = await Follow.findOne({\r\n        follower: req.user.id,\r\n        following: id,\r\n      });\r\n      isFollowing = !!existing;\r\n    }\r\n    res.status(200).json({\r\n      ...user.toObject(),\r\n      followersCount: user.followers.length,\r\n      followingCount: user.following.length,\r\n      postsCount,\r\n      commentsCount,\r\n      likesCount,\r\n      notificationsCount,\r\n      isFollowing,\r\n    });\r\n  } catch (err: unknown) {\r\n    const error = err as Error;\r\n    res.status(500).json({ message: 'Error fetching profile', error });\r\n  }\r\n};\r\n\r\n// üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è\r\nexport const updateProfile = async (req: RequestWithUser, res: Response) => {\r\n  try {\r\n    //TEMP\r\n    console.log('[PUT /api/users] has file?', !!req.file, req.file?.mimetype, req.file?.size);\r\n    const userId = req.user?.id;\r\n    if (!userId) return res.status(401).json({ message: 'Unauthorized' });\r\n\r\n    const { username, bio, fullName, website } = req.body;\r\n\r\n    //–ø–æ—Å–ª–µ –ø–æ–≤–µ—Ä–∫–∏ –≤ –ü–æ—Å—Ç–º–∞–Ω–Ω, —á—Ç–æ–±—ã –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø–∞—Ä–æ–ª—å\r\n    const user = await User.findById(userId).select('-password');\r\n    if (!user) return res.status(404).json({ message: 'User not found' });\r\n\r\n    // –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—è –ø—Ä–∏—à–ª–∏\r\n    if (username !== undefined) user.username = username;\r\n    if (bio !== undefined) user.bio = bio;\r\n    if (fullName !== undefined) user.fullName = fullName;\r\n    if (website !== undefined) user.website = website;\r\n\r\n    if (req.file) {\r\n      const imageUrl = await uploadToS3(req.file, 'profileImages');\r\n      // console.log('[PUT /api/users] imageUrl:', imageUrl);\r\n      user.profileImage = imageUrl;\r\n    }\r\n\r\n    await user.save();\r\n    //–ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ –ü–æ—Å—Ç–º–∞–Ω–Ω: –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø–∞—Ä–æ–ª—å\r\n    // const { password, __v, ...safe } = user.toObject();\r\n    const {__v, ...safe } = user.toObject();\r\nreturn res.json(safe);\r\n    // res.json(user);\r\n\r\n  } catch (err: unknown) {\r\n    const error = err as Error;\r\n    res\r\n      .status(500)\r\n      .json({ message: 'Update profile error', error: error.message });\r\n  }\r\n};\r\n\r\n// const userId = req.user?.id;\r\n//     if (!userId) {\r\n//       res.status(401).json({ message: \"Unauthorized\" });\r\n//       return;\r\n//     }\r\n\r\n//     const user = await User.findById(userId);\r\n//     if (!user) {\r\n//       res.status(404).json({ message: \"User not found\" });\r\n//       return;\r\n//     }\r\n\r\n//     if (req.body.username) user.username = req.body.username;\r\n//     if (req.body.fullName) user.fullName = req.body.fullName;\r\n//     if (req.body.bio) user.bio = req.body.bio;\r\n//     if (req.body.website) user.website = req.body.website;\r\n\r\n//     if (req.file) {\r\n//       const imageUrl = await uploadToS3(req.file, \"profileImages\");\r\n//       user.profileImage = imageUrl;\r\n//     }\r\n\r\n//     await user.save();\r\n//     res.json(user);\r\n//   } catch (err: unknown) {\r\n//     const error = err as Error;\r\n//     res\r\n//       .status(500)\r\n//       .json({ message: \"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è\", error: error.message });\r\n//   }\r\n// };\r\n"]}