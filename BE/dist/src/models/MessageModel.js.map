{"version":3,"file":"MessageModel.js","sourceRoot":"","sources":["../../../src/models/MessageModel.ts"],"names":[],"mappings":"AAAA,OAAO,QAAQ,EAAE,EAAE,MAAM,EAAmB,MAAM,UAAU,CAAC;AAU7D,MAAM,aAAa,GAAG,IAAI,MAAM,CAC9B;IACE,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACpE,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACvE,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;CACvC,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,iBAAiB;CACvC,CAAC;AAEF,eAAe,QAAQ,CAAC,KAAK,CAAW,SAAS,EAAE,aAAa,CAAC,CAAC;AAElE,qCAAqC","sourcesContent":["import mongoose, { Schema, Document, Types } from 'mongoose';\r\n\r\nexport interface IMessage extends Document {\r\n  sender: Types.ObjectId; // кто отправил\r\n  recipient: Types.ObjectId; // кому отправил\r\n  text: string; // текст сообщения\r\n  createdAt: Date;\r\n  // updatedAt: Date;\r\n}\r\n\r\nconst MessageSchema = new Schema<IMessage>(\r\n  {\r\n    sender: { type: Schema.Types.ObjectId, ref: 'User', required: true },\r\n    recipient: { type: Schema.Types.ObjectId, ref: 'User', required: true },\r\n    text: { type: String, required: true },\r\n  },\r\n  { timestamps: true } //  автоматически\r\n);\r\n\r\nexport default mongoose.model<IMessage>('Message', MessageSchema);\r\n\r\n//recipient  receiver кому отправлено\r\n"]}