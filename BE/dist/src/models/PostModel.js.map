{"version":3,"file":"PostModel.js","sourceRoot":"","sources":["../../../src/models/PostModel.ts"],"names":[],"mappings":"AAAA,OAAO,QAAQ,EAAE,EAAE,MAAM,EAAmB,MAAM,UAAU,CAAC;AAe7D,MAAM,UAAU,GAAG,IAAI,MAAM,CAC3B;IACE,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE;IAC9C,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACvC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACpE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;IAClE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;CACzE,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,CAChC,CAAC;AAEF,2EAA2E;AAC3E,UAAU,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC;IACnC,4BAA4B;IAC5B,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;AACnC,CAAC,CAAC,CAAC;AAEH,UAAU,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC;IACtC,+BAA+B;IAC/B,OAAO,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;AACtC,CAAC,CAAC,CAAC;AAEH,+BAA+B;AAC/B,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE;IACvB,QAAQ,EAAE,IAAI;IACd,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;QACvB,4BAA4B;QAC5B,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC,gBAAgB;QAC/B,OAAO,GAAG,CAAC;IACb,CAAC;CACF,CAAC,CAAC;AACH,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAE/C,eAAe,QAAQ,CAAC,KAAK,CAAQ,MAAM,EAAE,UAAU,CAAC,CAAC","sourcesContent":["import mongoose, { Schema, Document, Types } from 'mongoose';\r\n\r\nexport interface IPost extends Document {\r\n  _id: Types.ObjectId;\r\n  description?: string;\r\n  image: string;\r\n  author: Types.ObjectId;\r\n  likes: Types.ObjectId[];\r\n  comments: Types.ObjectId[];\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n  likesCount?: number;\r\n  commentsCount?: number;\r\n}\r\n\r\nconst PostSchema = new Schema<IPost>(\r\n  {\r\n    description: { type: String, required: false },\r\n    image: { type: String, required: true },\r\n    author: { type: Schema.Types.ObjectId, ref: 'User', required: true },\r\n    likes: [{ type: Schema.Types.ObjectId, ref: 'Like', default: [] }],\r\n    comments: [{ type: Schema.Types.ObjectId, ref: 'Comment', default: [] }],\r\n  },\r\n  { timestamps: true, id: false }\r\n);\r\n\r\n// Виртуальные поля // стало (устойчиво к undefined) не подтягивались посты\r\nPostSchema.virtual('likesCount').get(function (this: IPost) {\r\n  // return this.likes.length;\r\n  return (this.likes ?? []).length;\r\n});\r\n\r\nPostSchema.virtual('commentsCount').get(function (this: IPost) {\r\n  // return this.comments.length;\r\n  return (this.comments ?? []).length;\r\n});\r\n\r\n//для фронта визуально без 2 id\r\nPostSchema.set('toJSON', {\r\n  virtuals: true,\r\n  versionKey: false,\r\n  transform: (_doc, ret) => {\r\n    // ret.id = String(ret._id);\r\n    delete ret.id; // ← убираем _id\r\n    return ret;\r\n  },\r\n});\r\nPostSchema.set('toObject', { virtuals: true });\r\n\r\nexport default mongoose.model<IPost>('Post', PostSchema);\r\n"]}