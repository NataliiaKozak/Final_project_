{"version":3,"file":"app.js","sourceRoot":"","sources":["../app.ts"],"names":[],"mappings":"AAAA,OAAO,OAAyD,MAAM,SAAS,CAAC;AAChF,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB,OAAO,UAAU,MAAM,4BAA4B,CAAC;AACpD,OAAO,UAAU,MAAM,4BAA4B,CAAC;AACpD,OAAO,UAAU,MAAM,4BAA4B,CAAC;AACpD,OAAO,UAAU,MAAM,4BAA4B,CAAC;AACpD,OAAO,aAAa,MAAM,+BAA+B,CAAC;AAC1D,OAAO,YAAY,MAAM,8BAA8B,CAAC;AACxD,OAAO,YAAY,MAAM,8BAA8B,CAAC;AACxD,OAAO,aAAa,MAAM,+BAA+B,CAAC;AAC1D,OAAO,kBAAkB,MAAM,oCAAoC,CAAC;AAEpE,MAAM,GAAG,GAAgB,OAAO,EAAE,CAAC;AAEnC,6CAA6C;AAC7C,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;IACX,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,uBAAuB;IACzD,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,CAAC;IACpD,WAAW,EAAE,IAAI;CAClB,CAAC,CAAC,CAAC;AAEJ,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA,WAAW;AACnC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA,WAAW;AAC3D,2BAA2B;AAE3B,QAAQ;AACR,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACnD,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AACH,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;AACjC,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AAClC,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AAClC,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AAClC,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AACxC,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;AACrC,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AACtC,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AACxC,GAAG,CAAC,GAAG,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC;AAElD,gCAAgC;AAChC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACtC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,qBAAqB,EAAE,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC;AAEH,oBAAoB;AACpB,GAAG,CAAC,GAAG,CAAC,CAAC,GAAU,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACtE,OAAO,CAAC,KAAK,CAAC,iBAAiB,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;IAC9C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;AAC1E,CAAC,CAAC,CAAC;AAEH,eAAe,GAAG,CAAC;AAGnB,SAAS;AACT,+EAA+E;AAC/E,iEAAiE","sourcesContent":["import express, { Application, Request, Response, NextFunction } from \"express\";\r\nimport cors from \"cors\";\r\n\r\nimport authRoutes from \"./src/routes/authRoutes.js\";\r\nimport userRoutes from \"./src/routes/userRoutes.js\";\r\nimport postRoutes from \"./src/routes/postRoutes.js\";\r\nimport likeRoutes from \"./src/routes/likeRoutes.js\";\r\nimport commentRoutes from \"./src/routes/commentRoutes.js\";\r\nimport searchRoutes from \"./src/routes/searchRoutes.js\";\r\nimport followRoutes from \"./src/routes/followRoutes.js\";\r\nimport messageRoutes from \"./src/routes/messageRoutes.js\";\r\nimport notificationRoutes from \"./src/routes/notificationRoutes.js\";\r\n\r\nconst app: Application = express();\r\n\r\n// cors. Разрешить только фронту с 5173 порта\r\napp.use(cors({\r\n  origin: process.env.CLIENT_URL || 'http://localhost:5173', \r\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\r\n  credentials: true, \r\n}));\r\n\r\napp.use(express.json());// для JSON\r\napp.use(express.urlencoded({ extended: true }));// для форм\r\n// app.use(cookieParser());\r\n\r\n// роуты\r\napp.get('/api/data', (req: Request, res: Response) => {\r\n  res.json({ message: 'CORS работает!' });\r\n});\r\napp.use(\"/api/auth\", authRoutes);\r\napp.use(\"/api/users\", userRoutes);\r\napp.use(\"/api/posts\", postRoutes);\r\napp.use(\"/api/likes\", likeRoutes);\r\napp.use(\"/api/comments\", commentRoutes);\r\napp.use(\"/api/search\", searchRoutes);\r\napp.use(\"/api/follows\", followRoutes);\r\napp.use(\"/api/messages\", messageRoutes);\r\napp.use(\"/api/notifications\", notificationRoutes);\r\n\r\n// обработчик \"не найдено\" (404)\r\napp.use((req: Request, res: Response) => {\r\n  res.status(404).json({ message: \"Страница не найдена\" });\r\n});\r\n\r\n// обработчик ошибок\r\napp.use((err: Error, req: Request, res: Response, next: NextFunction) => {\r\n  console.error(\"Ошибка сервера:\", err.message);\r\n  res.status(500).json({ message: \"Ошибка сервера\", error: err.message });\r\n});\r\n\r\nexport default app;\r\n\r\n\r\n//Заметки\r\n// app.use(express.json({ limit: '10mb' })); // important for big base64 images\r\n// app.get('/api/health', (_req, res) => res.json({ ok: true }));"]}